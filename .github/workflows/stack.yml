# https://markkarpov.com/post/github-actions-for-haskell-ci.html

name: Stack build

on:
  push:         { branches: [master, ci-*] }
  pull_request: { types: [opened, synchronize] }

jobs:
  build:
    name: GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: [9.0.1, 8.10.7, 8.8.4, 8.6.5, 8.4.4, 8.2.2, 8.0.2]
        os: [ubuntu-latest]
        include:
          - os: macOS-latest
            ghc: 8.10.7
          - os: windows-latest
            ghc: 8.10.7

    env:
      STACK_FLAGS: --stack-yaml stack-${{ matrix.ghc }}.yaml --no-terminal --color always --system-ghc
      # STACK_BUILD: stack build ${{ STACK_FLAGS }}  ## invalid
      # STACK_BUILD: stack build ${{ env.STACK_FLAGS }}  ## also invalid
      STACK_BUILD: stack build --stack-yaml stack-${{ matrix.ghc }}.yaml --no-terminal --color always --system-ghc

    # env:
    #   STACK_BUILD: "stack build --stack-yaml stack-${{ matrix.ghc }}.yaml --no-terminal --system-ghc"

    steps:
      - uses: actions/checkout@v2                   # latest (2020-12-21): v2.3.4

      - name: Setup Haskell
        uses: haskell/actions/setup@v1
                                                    # latest (2020-12-21): v1.1.5
                                                    # latest (2021-08-19): v1.2.3
        id:   haskell-setup  # <-- self-chosen identifier
        with:
          ghc-version: ${{ matrix.ghc }}
          enable-stack: true
          # stack-version: latest

      - name: Info about the setup
        run: |
          echo "runner.os   = ${{ runner.os }}"
          echo "ghc-path    = ${{ steps.haskell-setup.outputs.ghc-path    }}"
          echo "cabal-path  = ${{ steps.haskell-setup.outputs.cabal-path  }}"
          echo "stack-path  = ${{ steps.haskell-setup.outputs.stack-path  }}"
          echo "cabal-store = ${{ steps.haskell-setup.outputs.cabal-store }}"
          echo "ghc-exe     = ${{ steps.haskell-setup.outputs.ghc-exe     }}"
          echo "cabal-exe   = ${{ steps.haskell-setup.outputs.cabal-exe   }}"
          echo "stack-exe   = ${{ steps.haskell-setup.outputs.stack-exe   }}"
          echo "stack-root  = ${{ steps.haskell-setup.outputs.stack-root  }}"
          echo "STACK_FLAGS = ${{ env.STACK_FLAGS }}"
          echo "STACK_BUILD = ${{ env.STACK_BUILD }}"

      - name: Cache dependencies
        # if:   runner.os == 'Linux'
        uses: actions/cache@v2                      # latest (2020-12-21): v2.1.3
        with:
          path: ${{ steps.haskell-setup.outputs.stack-root }}
          # A unique cache is used for each stack.yaml.
          key: ${{ runner.os }}-${{ steps.haskell-setup.outputs.stack-root }}-${{ hashFiles(format('stack-{0}.yaml', matrix.ghc)) }}
        ## DOESN'T WORK:
        # # For brevity of notation (rather than for using the environment variable), let
        # #   env.stack-root = steps.haskell-setup.outputs.stack-root
        # env:
        #   stack-root: ${{ steps.haskell-setup.outputs.stack-root }}
        # with:
        #   path: ${{ env.stack-root }}
        #   # A unique cache is used for each stack.yaml.
        #   key: ${{ runner.os }}-${{ env.stack-root }}-${{ hashFiles(format('stack-{0}.yaml', matrix.ghc)) }}
          # runner.os is explained here:
          # https://stackoverflow.com/questions/57946173/github-actions-run-step-on-specific-os

      - name: Build dependencies.
        # run: stack build --stack-yaml stack-${{ matrix.ghc }}.yaml --no-terminal --color always --system-ghc --only-dependencies
        run: ${{ env.STACK_BUILD }} --only-dependencies
        # Windows does not like this:
        # run: ${STACK_BUILD} --only-dependencies
          # --test

      - name: Build agda2lagda w/o tests.
        run: ${{ env.STACK_BUILD }}
          #  --copy-bins

      - name: Build agda2lagda and run tests.
        run: ${{ env.STACK_BUILD }} --test
        if: matrix.ghc != '8.4.4' && matrix.ghc != '8.2.2' && matrix.ghc != '8.0.2'
        # Fall back to string comparison as version-comparison does not seem to work.
        # Simply exclude the versions that do not support
        # if: matrix.ghc >= 8.6  ## >= does not seem to work out-of-the-box for version
          # goldplate is only reasonably supported from stack-8.6.5.yaml

      - name: Run agda2lagda.
        run: stack exec ${{ env.STACK_FLAGS }} agda2lagda -- --help

      - name: Mac package.
        if: runner.os == 'macOS'
        run: |
          export AGDA2LAGDA_EXE=$(stack path --local-install-root ${{ env.STACK_FLAGS }})/bin/agda2lagda
          export AGDA2LAGDA_VERSION=$(${AGDA2LAGDA_EXE} --numeric-version)
          export AGDA2LAGDA_BIN=agda2lagda-${AGDA2LAGDA_VERSION}-mac.binary
          export AGDA2LAGDA_PKG=agda2lagda-${AGDA2LAGDA_VERSION}-mac.pkg
          # Raw Mac binary
          cp -p ${AGDA2LAGDA_EXE} ${AGDA2LAGDA_BIN}
          # Build Mac package
          mkdir -p tmp/usr/local/bin
          cp -p ${AGDA2LAGDA_EXE} tmp/usr/local/bin/agda2lagda
          pkgbuild \
            --root tmp \
            --identifier abel.andreas.agda2lagda.pkg \
            --version ${AGDA2LAGDA_VERSION} \
            --install-location / \
            --ownership recommended \
            ${AGDA2LAGDA_PKG}
          # Save env variables for the next step
          echo "AGDA2LAGDA_BIN=${AGDA2LAGDA_BIN}" >> ${GITHUB_ENV}
          echo "AGDA2LAGDA_PKG=${AGDA2LAGDA_PKG}" >> ${GITHUB_ENV}

      - name: Mac release.
        if: runner.os == 'macOS'
        # && startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          name: Test release
          tag_name: v0.0.0
          files: |
            ${{ env.AGDA2LAGDA_BIN }}
            ${{ env.AGDA2LAGDA_PKG }}
